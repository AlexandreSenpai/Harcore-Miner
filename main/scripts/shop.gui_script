local game_manager = require("main.scripts.game_manager")

function init(self)
	self.damage = gui.get_node("damage")
	self.timer = gui.get_node("timer")
	self.continue = gui.get_node("continue")

	self.damage_price = gui.get_node("damage_price")
	self.timer_price = gui.get_node("timer_price")

	msg.post(".", "acquire_input_focus")
end

function update(self, dt)
	gui.set_text(self.damage_price, tostring(math.floor(game_manager.shopping.damage.price)))
	gui.set_text(self.timer_price, tostring(math.floor(game_manager.shopping.timer.price)))
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released then
		if gui.pick_node(self.damage, action.x, action.y) then
			if game_manager.status.gold >= game_manager.shopping.damage.price then
				game_manager.status.gold = game_manager.status.gold - game_manager.shopping.damage.price
				game_manager.shopping.damage.qty = game_manager.shopping.damage.qty + 1
				game_manager.shopping.damage.price = (
					game_manager.shopping.damage.price + (game_manager.shopping.damage.qty * game_manager.shopping.damage.scale)
				)
			end
		end

		if gui.pick_node(self.timer, action.x, action.y) then
			if game_manager.status.gold >= game_manager.shopping.timer.price then
				game_manager.status.gold = game_manager.status.gold - game_manager.shopping.timer.price
				game_manager.shopping.timer.qty = game_manager.shopping.timer.qty + 1
				game_manager.shopping.timer.price = (
					game_manager.shopping.timer.price + (game_manager.shopping.timer.qty * game_manager.shopping.timer.scale)
				)
			end
		end

		if gui.pick_node(self.continue, action.x, action.y) then
			msg.post("/mining_blocks#mining_block_factory", "generate_map", { level = game_manager.status.level })
		end
	end
end
